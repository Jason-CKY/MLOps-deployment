version: '3'

services:
  redis:
    image: redis
    networks:
    - deployml_network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  modelserver:
    build:
      context: .
      dockerfile: ./deploy/modelserver/Dockerfile
    container_name: modelserver
    restart: on-failure
    depends_on:
      redis:
        condition: service_healthy
      # resnet-client:
      #   condition: service_completed_successfully
    volumes:
      - ./modelserver:/app
    networks:
    - deployml_network
    env_file:
    - ./config/env/common.env
    - ./config/env/dev.env
    # command: >
    #   bash -c "
    #   sleep infinity
    #   "
      
  apiserver:
    build:
      context: .
      dockerfile: ./deploy/apiserver/Dockerfile
      target: dev
    container_name: apiserver
    restart: always
    ports:
    - "80:80"
    networks:
    - deployml_network
    depends_on:
    - redis
    - modelserver
    env_file:
    - ./config/env/common.env
    entrypoint: /start-reload.sh    # runs fastapi with live reloading when files are changed
    volumes:
      - ./apiserver:/app

networks:
  deployml_network:
